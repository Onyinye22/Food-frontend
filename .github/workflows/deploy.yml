name: Deploy static website to S3

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    # fallback: use secret if present, otherwise default to us-east-1
    env:
      AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}
      BUCKET_BASE: food-frontend-esther

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Determine bucket name
        id: bucket
        run: |
          # bucket name must be globally unique; append actor to reduce collisions
          BUCKET_NAME="${{ env.BUCKET_BASE }}-${{ github.actor }}"
          echo "bucket_name=$BUCKET_NAME" >> $GITHUB_OUTPUT

      - name: Create bucket if missing
        run: |
          BUCKET=${{ steps.bucket.outputs.bucket_name }}
          # head-bucket returns non-zero if missing
          aws s3api head-bucket --bucket "$BUCKET" 2>/dev/null || \
            aws s3api create-bucket --bucket "$BUCKET" --create-bucket-configuration LocationConstraint=${AWS_REGION}
          echo "Bucket ensured: $BUCKET"

      - name: Upload website files to S3
        run: |
          BUCKET=${{ steps.bucket.outputs.bucket_name }}
          aws s3 sync . s3://$BUCKET --delete --exclude ".git/*" --exclude ".github/*"

      - name: Enable static website hosting
        run: |
          BUCKET=${{ steps.bucket.outputs.bucket_name }}
          aws s3 website s3://$BUCKET/ --index-document index.html --error-document index.html

      - name: Set public bucket policy
        run: |
          BUCKET=${{ steps.bucket.outputs.bucket_name }}
          cat > policy.json <<POLICY
          {
            "Version":"2012-10-17",
            "Statement":[
              {
                "Sid":"PublicReadGetObject",
                "Effect":"Allow",
                "Principal":"*",
                "Action":["s3:GetObject"],
                "Resource":["arn:aws:s3:::$BUCKET/*"]
              }
            ]
          }
          POLICY
          aws s3api put-bucket-policy --bucket $BUCKET --policy file://policy.json

      - name: Show website URL
        run: |
          BUCKET=${{ steps.bucket.outputs.bucket_name }}
          echo "Website: http://$BUCKET.s3-website-${AWS_REGION}.amazonaws.com"
